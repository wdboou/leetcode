/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        ListNode *fast = head;
        ListNode *slow = head;
        while(fast!=NULL && fast!=NULL)
        {
        	slow = slow->next;
        	fast = fast->next->next;
        	if(slow == fast)
        	return ture;
        }
        return false;
    }
};
