/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        ListNode *faster = head;
        ListNode *slower = head;
        while(faster!=NULL && faster->next!=NULL && faster->next->next!=NULL)
        {
            if(faster->next == slower || faster->next->next == slower)
            return true;
            else 
            {
                faster = faster->next->next;
                slower = slower->next;
            }
        }
        return false;
    }
};
