/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *rotateRight(ListNode *head, int k) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        // the idea of this code is first to make it a circle list and then cut from specific place.
        ListNode *start = head;
        ListNode *end = NULL;
        ListNode *temp = NULL;
        int _len = 0;
        while(head!=NULL)
        {
            _len++;
            if(head->next==NULL)
            {
                end = head;
                break;
            }
            head = head->next;
        }
        if(_len==0) return start;
        // cyclize the list
        end->next = start;
        // find the cut point
        temp = end;
        head = start;
        int step = k%_len;
        for(int i=0; i<_len-step; i++)
        {
            temp = head;
            head = head->next;
        }
        temp->next = NULL;
        return head;
    }
};
