class Solution {
public:
    vector<vector<int> > threeSum(vector<int> &num) {
        vector<vector<int>> result;
        if(num.size()<3) return result;
        vector<int> triplet(3);
        sort(num.begin(), num.end());
        for(int i=0; i<num.size()-2&&num[i]<=0; i++)
        {
            // remove duplicates
            if(i>0&&num[i]==num[i-1]) continue;
            int j = i+1;
            int k = num.size()-1;
            while(j<k)
            {
                int sum = num[i] + num[j] + num[k];
                if(sum==0)
                {
                    triplet[0] = num[i];
                    triplet[1] = num[j];
                    triplet[2] = num[k];
                    result.push_back(triplet);
                    j++;
                    k--;
                    while(j<k&&num[j]==num[j-1]) j++;
                    while(j<k&&num[k]==num[k+1]) k--;
                }
                else if(sum>0) k--;
                else j++;
            }
        }
        return result;
    }
};
