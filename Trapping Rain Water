class Solution {
public:
    int trap(int A[], int n) {
        if(n<2) return 0;
        int *right_max = new int[n];
        int *left_max = new int[n];
        int water = 0;
        left_max[0] = 0;
        right_max[n-1] = 0;
        // calculat the right_max and left_max
        for(int i=1; i<=n-1; i++)
        {
            left_max[i] = max(left_max[i-1], A[i-1]);
            right_max[n-i-1] = max(right_max[n-i], A[n-i]);
        }
        for(int i=1; i<n-1; i++)
        {
            int level = min(left_max[i],right_max[i]);
            if(level>A[i]) water += level-A[i];
        }
        delete left_max, right_max;
        return water;
    }
};
