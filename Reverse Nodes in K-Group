/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* pre=dummy;
        int idx = 0;
        while(head)
        {
            idx++;
            if(idx%k==0)
            {
                pre = reverse(pre,head->next);
                head=pre->next;
            }else
            {
                head=head->next;
            }
        }
        return dummy->next;
        
    }
    ListNode* reverse(ListNode* pre, ListNode* next)
    {
        ListNode* last = pre->next;
        ListNode* cur = last->next;
        while(cur!=next)
        {
            last->next = cur->next;
            cur->next = pre->next;
            pre->next = cur;
            cur=last->next;
        }
        return last;
    }
};
