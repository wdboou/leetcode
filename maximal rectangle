class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        if(matrix.empty()) return 0;
        if(matrix[0].empty()) return 0;
        vector<vector<int>> hist(matrix.size(),vector<int>(matrix[0].size()));
        for(int i=0; i<matrix.size(); i++)
        {
            for(int j=0; j<matrix[0].size(); j++)
            {
                if(matrix[i][j]=='0')
                    hist[i][j]=0;
                else
                    hist[i][j]=(i==0?1:hist[i-1][j]+1);
            }
        }
        int m=0;
        for(int i=0; i<matrix.size(); i++)
        {
            m = max(m,max_hist(hist[i]));
        }
        return m;
    }
    int max_hist(vector<int> hist)
    {
        stack<int> p;
        int m=0, i=0;
        hist.push_back(0);
        while(i<hist.size())
        {
            if(p.empty()||hist[p.top()]<=hist[i])
            {
                p.push(i++);
            }else
            {
                int t = p.top();
                p.pop();
                m=max(m,hist[t]*(p.empty()?i:i-p.top()-1));
            }
        }
        return m;
    }
};
