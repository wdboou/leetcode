/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        // to solve this problem, you need to do some paper work to draw the problem first and then find the solution.
        // very similar to the Linked List Cycle, but with another cycle
        ListNode *fast=head;
        ListNode *slow=head;
        while(true)
        {
        	if(fast==NULL || fast->next==NULL)
        	return NULL;
        	slow = slow->next;
        	fast = fast->next->next;
        	if(fast=slow)
        	break;
        }
        slow = head;
        while(fast!=slow)
        {
        	fast=fast->next;
        	slow=slow->next;
        }	
        return slow;
    }
};
