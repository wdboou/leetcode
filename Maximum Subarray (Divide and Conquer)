class Solution {
public:
    int maxSubArray(int A[], int n) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
           return recur_sub(A,0,n-1);
    }
    recur_sub(int A[], int left, int right)
    {
        if (left>right) return INT_MIN;
        if (left==right) return A[left];
        int mid = left + ((right-left)>>1);
        int left_max = INT_MIN;
        int right_max = INT_MIN;
        for(int i=mid-1, cur_max=0; i>=left; --i)
            cur_max += A[i], left_max = max_int(left_max, cur_max);
        for(int i=mid+1, cur_max=0; i<=right; ++i)
            cur_max += A[i], right_max = max_int(right_max, cur_max);
        int mid_max = A[mid] + max(0, left_max) + max(0, right_max);
        return max(max(recur_sub(A, left, mid-1), recur_sub(A, mid+1, right)), mid_max);
    }
    int max_int(int a, int b)
    {
        return (a>b)?a:b;
    }
};
